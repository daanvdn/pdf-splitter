name: Build, Publish Artifact and Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Build npm app
        run: npm run build:prod

      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: '3.11'
          environment-file: conda_environment.yml
          activate-environment: pdfsplitter_rest_api

      - name: Verify environment
        shell: bash -l {0}
        run: |
          conda info --all
          conda list

      - name: Run PyInstaller
        shell: bash -l {0}
        run: |
          pyinstaller src/rest_api.py --distpath python_dist --noconfirm --onefile

      - name: Create dist/bin directory
        run: New-Item -ItemType Directory -Force -Path dist/bin
        shell: pwsh

      - name: Copy rest_api.exe to dist/bin
        run: Copy-Item python_dist/rest_api.exe dist/bin/rest_api.exe
        shell: pwsh

      - name: Setup Node.js for Electron
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install Electron dependencies
        run: npm ci

      - name: Build Electron app
        run: npx electron-builder build --publish=never --win

      - name: Publish artifact
        uses: actions/upload-artifact@v2
        with:
          name: PDFSplitter
          path: release/PDF Splitter 1.0.0.msi

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/PDF Splitter 1.0.0.msi
          asset_name: PDF Splitter 1.0.0.msi
          asset_content_type: application/octet-stream